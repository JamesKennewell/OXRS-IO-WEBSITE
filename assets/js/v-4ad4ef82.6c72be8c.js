"use strict";(self.webpackChunkoxrs_docs_site=self.webpackChunkoxrs_docs_site||[]).push([[379],{8141:(e,r,t)=>{t.r(r),t.d(r,{data:()=>o});const o={key:"v-4ad4ef82",path:"/docs/hardware/controllers/rack32.html",title:"Rack32",lang:"en-US",frontmatter:{tags:["OXRS-SHA-RACK32","URC","RACK32"]},excerpt:"",headers:[{level:2,title:"Features",slug:"features",children:[]},{level:2,title:"Supported Firmware",slug:"supported-firmware",children:[]},{level:2,title:"Supported Libraries",slug:"supported-libraries",children:[]},{level:2,title:"Additional Resources",slug:"additional-resources",children:[]},{level:2,title:"Where to Buy",slug:"where-to-buy",children:[]},{level:2,title:"FAQs",slug:"faqs",children:[]},{level:2,title:"Compatible Hardware",slug:"compatible-hardware",children:[]}],filePathRelative:"docs/hardware/controllers/rack32.md",git:{updatedTime:1631407916e3,contributors:[{name:"Jonathan Oxer",email:"jon@oxer.com.au",commits:1}]}}},1434:(e,r,t)=>{t.r(r),t.d(r,{default:()=>B});var o=t(6252);const a=(0,o.uE)('<h1 id="rack32" tabindex="-1"><a class="header-anchor" href="#rack32" aria-hidden="true">#</a> Rack32</h1><p class="maker">by <b>SuperHouse Automation</b></p><blockquote><p>SKU: OXRS-SHA-RACK32</p></blockquote><p><img src="/images/oxrs-rack32.jpg" alt="SuperHouse Automation Rack32 ESP32 control board"></p><p>A general purpose control board for rack mount projects.</p><p>DIY rack-mount projects often require an Ethernet connection, a status display, power regulation, and other features that are not specific to the project.</p><p>This board fits into a rack-mount case and provides those common features so they don&#39;t have to be recreated every time.</p><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><ul><li><strong>ESP32</strong> microcontroller with <strong>WiFi</strong>.</li><li><strong>10/100Mbps</strong> Ethernet.</li><li>Support for both DIY (12V) PoE and <strong>802.3af PoE</strong>.</li><li>Pluggable terminal block for optional external DC power input.</li><li>Automotive-grade voltage regulator for harsh electrical environments.</li><li>6-way IDC &quot;I2C-Breakout&quot; header for linking to other boards.</li><li>8-way IDC &quot;SPI-LCD&quot; header for connection to an LCD.</li><li><strong>USB-C</strong> connector for loading firmware.</li><li>Auto power source selection between USB-C, PoE, and external DC.</li><li>I/O header with power, 2 x I2C ports, and second hardware serial port.</li><li>Micro SD card slot for config files, logs, and media storage.</li><li>Onboard <strong>temperature sensor</strong>.</li><li>Header for front-panel power LED.</li><li>Can be built with onboard PCB antenna or external WiFi antenna.</li></ul><h2 id="supported-firmware" tabindex="-1"><a class="header-anchor" href="#supported-firmware" aria-hidden="true">#</a> Supported Firmware</h2>',10),l=(0,o.Uk)("OXRS-SHA-SmokeDetector-ESP32-FW "),n={href:"https://github.com/SuperHouse/OXRS-SHA-SmokeDetector-ESP32-FW",target:"_blank",rel:"noopener noreferrer"},i=(0,o.Uk)("Github"),s=(0,o.Uk)("OXRS-SHA-StateController-ESP32-FW "),u={href:"https://github.com/SuperHouse/OXRS-SHA-StateController-ESP32-FW",target:"_blank",rel:"noopener noreferrer"},d=(0,o.Uk)("Github"),h=(0,o.Uk)("OXRS-SHA-StateMonitor-ESP32-FW "),p={href:"https://github.com/SuperHouse/OXRS-SHA-StateMonitor-ESP32-FW",target:"_blank",rel:"noopener noreferrer"},c=(0,o.Uk)("Github"),b=(0,o._)("h2",{id:"supported-libraries",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#supported-libraries","aria-hidden":"true"},"#"),(0,o.Uk)(" Supported Libraries")],-1),S=(0,o.Uk)("OXRS-SHA-MQTT-ESP32-LIB "),k={href:"https://github.com/SuperHouse/OXRS-SHA-MQTT-ESP32-LIB",target:"_blank",rel:"noopener noreferrer"},m=(0,o.Uk)("Github"),f=(0,o.Uk)("OXRS-SHA-IOHandler-ESP32-LIB "),g={href:"https://github.com/SuperHouse/OXRS-SHA-IOHandler-ESP32-LIB",target:"_blank",rel:"noopener noreferrer"},_=(0,o.Uk)("Github"),w=(0,o._)("h2",{id:"additional-resources",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#additional-resources","aria-hidden":"true"},"#"),(0,o.Uk)(" Additional Resources")],-1),U=(0,o.Uk)("More info "),H={href:"https://github.com/SuperHouse/RACK32",target:"_blank",rel:"noopener noreferrer"},A=(0,o.Uk)("Github"),v=(0,o._)("h2",{id:"where-to-buy",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#where-to-buy","aria-hidden":"true"},"#"),(0,o.Uk)(" Where to Buy")],-1),R={href:"https://www.superhouse.tv/product/rack32-universal-rack-controller-board/",target:"_blank",rel:"noopener noreferrer"},C=(0,o.Uk)("SuperHouse Store"),O=(0,o._)("h2",{id:"faqs",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#faqs","aria-hidden":"true"},"#"),(0,o.Uk)(" FAQs")],-1),P=(0,o._)("details",{class:"custom-container details"},[(0,o._)("summary",null,"Does it come with a power supply?"),(0,o._)("p",null,"TODO - Jon to supply some FAQ's")],-1),E={class:"custom-container tip"},W=(0,o._)("p",{class:"custom-container-title"},"Maker Info",-1),x=(0,o._)("p",null,[(0,o._)("strong",null,"Maker:"),(0,o.Uk)(" SuperHouse Automation")],-1),I=(0,o._)("strong",null,"Link:",-1),y=(0,o.Uk)(),D={href:"https://www.superhouse.tv",target:"_blank",rel:"noopener noreferrer"},F=(0,o.Uk)("https://www.superhouse.tv"),L=(0,o._)("h2",{id:"compatible-hardware",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#compatible-hardware","aria-hidden":"true"},"#"),(0,o.Uk)(" Compatible Hardware")],-1),X=(0,o.Uk)("Universal Input/Output (UIO) 16Port "),q=(0,o.Uk)("Link"),B={render:function(e,r){const t=(0,o.up)("OutboundLink"),B=(0,o.up)("RouterLink");return(0,o.wg)(),(0,o.iD)(o.HY,null,[a,(0,o._)("ul",null,[(0,o._)("li",null,[l,(0,o._)("a",n,[i,(0,o.Wm)(t)])]),(0,o._)("li",null,[s,(0,o._)("a",u,[d,(0,o.Wm)(t)])]),(0,o._)("li",null,[h,(0,o._)("a",p,[c,(0,o.Wm)(t)])])]),b,(0,o._)("ul",null,[(0,o._)("li",null,[S,(0,o._)("a",k,[m,(0,o.Wm)(t)])]),(0,o._)("li",null,[f,(0,o._)("a",g,[_,(0,o.Wm)(t)])])]),w,(0,o._)("ul",null,[(0,o._)("li",null,[U,(0,o._)("a",H,[A,(0,o.Wm)(t)])])]),v,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o._)("a",R,[C,(0,o.Wm)(t)])])]),O,P,(0,o._)("div",E,[W,x,(0,o._)("p",null,[I,y,(0,o._)("a",D,[F,(0,o.Wm)(t)])])]),L,(0,o._)("ul",null,[(0,o._)("li",null,[X,(0,o.Wm)(B,{to:"/docs/hardware/input-output-devices/universal-input-output-uio-16port.html"},{default:(0,o.w5)((()=>[q])),_:1})])])],64)}}}}]);